# Generated by Django 3.2.8 on 2021-10-29 19:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ResultsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atp', models.IntegerField(default=0, help_text='Tournament number (men)')),
                ('wta', models.IntegerField(default=0, help_text='Tournament number (Women)')),
                ('location', models.CharField(max_length=100)),
                ('tournament', models.TextField()),
                ('date', models.DateTimeField()),
                ('series', models.CharField(max_length=100)),
                ('tier', models.CharField(help_text='Tier (tournament ranking) of WTA tennis series', max_length=100)),
                ('court', models.CharField(max_length=150)),
                ('surface', models.CharField(help_text='Type of surface (clay, hard, carpet or grass)', max_length=50)),
                ('round', models.CharField(help_text='Round of match', max_length=150)),
                ('best_of', models.IntegerField(default=0, help_text='Maximum number of sets playable in match')),
                ('winner', models.CharField(help_text='Match winner', max_length=100)),
                ('loser', models.CharField(max_length=100)),
                ('wrank', models.PositiveIntegerField(default=0, help_text='ATP Entry ranking of the match winner as of the start of the tournament')),
                ('lrank', models.PositiveIntegerField(default=0)),
                ('wPts', models.PositiveIntegerField(default=0, help_text='ATP Entry points of the match winner as of the start of the tournament')),
                ('lpts', models.PositiveIntegerField(default=0)),
                ('w1', models.IntegerField(blank=True, help_text='Number of games won in 1st set by match winner', null=True)),
                ('l1', models.IntegerField(blank=True, null=True)),
                ('w2', models.IntegerField(blank=True, null=True)),
                ('l2', models.IntegerField(blank=True, null=True)),
                ('w3', models.IntegerField(blank=True, null=True)),
                ('l3', models.IntegerField(blank=True, null=True)),
                ('w4', models.IntegerField(blank=True, null=True)),
                ('l4', models.IntegerField(blank=True, null=True)),
                ('w5', models.IntegerField(blank=True, null=True)),
                ('l5', models.IntegerField(blank=True, null=True)),
                ('wsets', models.IntegerField(blank=True, help_text='Number of sets won by match winner', null=True)),
                ('lsets', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=150)),
                ('b365w', models.FloatField(help_text='Bet365 odds of match winner', null=True)),
                ('b365l', models.FloatField(null=True)),
                ('exw', models.FloatField(help_text='Expekt  odds of match winner', null=True)),
                ('exl', models.FloatField(null=True)),
                ('lbw', models.FloatField(help_text='Ladbrokes odds of match winner', null=True)),
                ('lbl', models.FloatField(null=True)),
                ('psw', models.FloatField(help_text='Pinnacles odds of match winner', null=True)),
                ('psl', models.FloatField(null=True)),
                ('sjw', models.FloatField(help_text='Stan James odds of match winner', null=True)),
                ('sjl', models.FloatField(null=True)),
                ('maxw', models.FloatField(help_text='Maximum odds of match winner (as shown by Oddsportal.com)', null=True)),
                ('maxl', models.FloatField(null=True)),
                ('avgw', models.FloatField(help_text='Average odds of match winner (as shown by Oddsportal.com)', null=True)),
                ('avgl', models.FloatField(null=True)),
            ],
            options={
                'verbose_name': 'Results data',
                'verbose_name_plural': 'Results data',
            },
        ),
    ]
